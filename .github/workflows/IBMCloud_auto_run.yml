# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when a release is created
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `aws-region` in the workflow below with your repository's region.
#
# 2. Create an ECS task definition, an ECS cluster, and an ECS service.
#    For example, follow the Getting Started guide on the ECS console:
#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun
#    Replace the values for `service` and `cluster` in the workflow below with your service and cluster names.
#
# 3. Store your ECS task definition as a JSON file in your repository.
#    The format should follow the output of `aws ecs register-task-definition --generate-cli-skeleton`.
#    Replace the value of `task-definition` in the workflow below with your JSON file's name.
#    Replace the value of `container-name` in the workflow below with the name of the container
#    in the `containerDefinitions` section of the task definition.
#
# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: IBM Cloud Auto Restart

on:
  push:
    branches: [ master ]
  schedule:
    - cron: '0 12 * * FRI'

jobs:
  ibm-cloud-restart:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Init
      run: |
        chmod -R 777 ./IBM_Cloud_CLI/
        ./IBM_Cloud_CLI/ibmcloud config --check-version=false
    - name: Login IBM Cloud
      env:
        IBM_ACCOUNT: ${{ secrets.IBM_ACCOUNT }}
        REGION_NUM: ${{ secrets.REGION_NUM }}
      run: |
        ./IBM_Cloud_CLI/ibmcloud login <<EOF
        $IBM_ACCOUNT
        $REGION_NUM
        no
        EOF
    - name: Target IBM Cloud
      env:
        RESOURSE_ID: ${{ secrets.RESOURSE_ID }}
      run: |
        ./IBM_Cloud_CLI/ibmcloud target -g "$RESOURSE_ID"
        ./IBM_Cloud_CLI/ibmcloud target --cf
        ./IBM_Cloud_CLI/ibmcloud cf install -f -v 6.15.0
    - name: Restart IBM Cloud
      env:
        IBM_APP_NAME: ${{ secrets.IBM_APP_NAME }}
      run: |
        ./IBM_Cloud_CLI/ibmcloud cf restart "$IBM_APP_NAME"
